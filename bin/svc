#!/usr/bin/env php
<?php
/**
 * Copyright Â© Magento, Inc. All rights reserved.
 * See COPYING.txt for license details.
 */
require __DIR__ . '/../bootstrap.php';

use Symfony\Component\Console\Application;
use Magento\SemanticVersionChecker\Console\Command\BackwardIncompatibleChangesCommand;
use Magento\SemanticVersionChecker\Console\Command\CompareSourceCommand;

if (PHP_SAPI !== 'cli') {
    echo 'Command "bin/svc" must be run as a CLI application.' . PHP_EOL;
    exit(1);
}

try {
/*
    $directoryList = new \Magento\Framework\App\Filesystem\DirectoryList(dirname(__DIR__));
    $driverPool = new \Magento\Framework\Filesystem\DriverPool;
    $configFilePool = new \Magento\Framework\Config\File\ConfigFilePool;
    $objectManagerFactory = new ObjectManagerFactory($directoryList, $driverPool, $configFilePool);

*/
//    $magentoObjectManagerFactory = \Magento\Framework\App\Bootstrap::createObjectManagerFactory(BP);
//    $magentoObjectManager = $objectManagerFactory->create([]);
//    $application = $magentoObjectManager->create(Application::class);

//    $this->dirList = new \Magento\Framework\App\Filesystem\DirectoryList(dirname(__DIR__));
//    $driverPool = new \Magento\Framework\Filesystem\DriverPool;
//    $configFilePool = new \Magento\Framework\Config\File\ConfigFilePool;
//    $this->_factory = new \Magento\SemanticVersionChecker\ObjectManagerFactory($this->dirList, $driverPool, $configFilePool);

    $application = $objectManager->create(Application::class);
    $application->add(new BackwardIncompatibleChangesCommand());
    $application->add(new CompareSourceCommand());
    $application->run();
} catch (\Exception $e) {
    while ($e) {
        echo $e->getMessage();
        echo $e->getTraceAsString();
        echo "\n\n";
        $e = $e->getPrevious();
    }
    exit(1);
}
